import { app, BrowserWindow } from 'electron'
import { outputJSON, readJSON } from 'fs-extra'
import path from 'path'
import { setApplicationMenu } from './application_menu'

import AppIcon from './static/icon.png'

type SavedWindowOpts = {
  x: number
  y: number
  width: number
  height: number
}

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

export async function configureAppWindow(): Promise<BrowserWindow> {
  const config_path = path.join(app.getPath('userData'), 'window.json')

  const savedWindowOpts: SavedWindowOpts = await readJSON(config_path)

  const appWindow = new BrowserWindow({
    minWidth: 800,
    minHeight: 600,
    center: true,
    show: false,
    autoHideMenuBar: true,
    // icon: AppIcon,
    webPreferences: {
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
    },
    ...savedWindowOpts
  })

  appWindow.once('ready-to-show', () => appWindow.show())

  appWindow.on('close', async () => {
    const [ width, height ] = appWindow.getSize()
    const [ x, y ] = appWindow.getPosition()
    try {
      await outputJSON(config_path, { width, height, x, y })
    } catch (error) {
      console.error(error)
    }
    app.quit()
  })

  setApplicationMenu(appWindow)

  appWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY)

  return appWindow
}
